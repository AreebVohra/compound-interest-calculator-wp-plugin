{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","myChangeHandler","event","nam","target","name","val","value","setState","calculateCompoundInterest","a","futureValue","varianceAbove","varianceBelow","total","principal","state","initalInvestment","principalAbove","principalBelow","interest","interestPercentage","interestAbove","interestRateVariance","interestBelow","time","timeInYears","compoundFrequency","monthly","monthlyContribution","savings","push","index","parseFloat","toFixed","newFinal","newVarianceAbove","newVarianceBelow","i","futureValueSeries","varianceAboveSeries","varianceBelowSeries","ContributionSeries","slice","graphComplete","exporting","Highcharts","factory","setOptions","lang","decimalPoint","thousandsSep","this","diffVarianceChart","data","color","normalChart","options","title","text","credits","href","tooltip","shared","valuePrefix","valueDecimals","headerFormat","yAxis","labels","format","tickInterval","xAxis","formatter","series","enabled","className","onSubmit","id","htmlFor","type","size","maxLength","required","onChange","tabIndex","highcharts","onClick","Component","Boolean","window","location","hostname","match","document","querySelector","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8WA+ReA,G,wDAtRb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAgBRC,gBAAkB,SAACC,GACjB,IAAIC,EAAMD,EAAME,OAAOC,KACnBC,EAAMJ,EAAME,OAAOG,MACvB,EAAKC,SAAL,eAAiBL,EAAMG,KApBN,EAuBnBG,0BAvBmB,sBAuBS,8DAAAC,EAAA,sDAyB1B,IAxBIC,EAAc,GACdC,EAAgB,GAChBC,EAAgB,GAEhBC,EAAQ,GACRC,EAAY,EAAKC,MAAMC,iBACvBC,EAAiB,EAAKF,MAAMC,iBAC5BE,EAAiB,EAAKH,MAAMC,iBAE5BG,EAAW,EAAKJ,MAAMK,mBAAqB,IAC3CC,GAAiB,EAAKN,MAAMK,mBAAqB,EAAKL,MAAMO,sBAAwB,IACpFC,GAAiB,EAAKR,MAAMK,mBAAqB,EAAKL,MAAMO,sBAAwB,IAEpFE,EAAO,EAAKT,MAAMU,YAAc,EAAKV,MAAMW,kBAC3CC,EAAU,EAAKZ,MAAMa,oBACrBC,EAAoB,GAAVF,EAEdjB,EAAYoB,KAAKhB,GACjBH,EAAcmB,KAAKb,GACnBL,EAAckB,KAAKZ,GAEnBL,EAAMiB,KAAKhB,GAGFiB,EAAQ,EAAGA,EAAQP,EAAMO,IAEK,IAAjC,EAAKhB,MAAMW,mBACbZ,EAAYA,EAAaA,EAAYK,EAAuB,GAAVQ,EACV,IAApC,EAAKZ,MAAMO,uBACbL,EAAiBA,EAAkBA,EAAiBI,EAA4B,GAAVM,EACtET,EAAiBA,EAAkBA,EAAiBK,EAA4B,GAAVI,IAGhC,IAAjC,EAAKZ,MAAMW,mBAClBZ,EAAYA,EAAaA,GAAaK,EAAW,GAAiB,EAAVQ,EAChB,IAApC,EAAKZ,MAAMO,uBACbL,EAAiBA,EAAkBA,GAAkBI,EAAgB,GAAiB,EAAVM,EAC5ET,EAAiBA,EAAkBA,GAAkBK,EAAgB,GAAiB,EAAVI,IAGtC,KAAjC,EAAKZ,MAAMW,mBAClBZ,EAAYA,EAAaA,GAAaK,EAAW,IAAkB,EAAVQ,EACjB,IAApC,EAAKZ,MAAMO,uBACbL,EAAiBA,EAAkBA,GAAkBI,EAAgB,IAAkB,EAAVM,EAC7ET,EAAiBA,EAAkBA,GAAkBK,EAAgB,IAAkB,EAAVI,IAGvC,MAAjC,EAAKZ,MAAMW,oBAClBZ,EAAYA,EAAaA,GAAaK,EAAW,KAASQ,GAAW,IAAM,IACnC,IAApC,EAAKZ,MAAMO,uBACbL,EAAiBA,EAAkBA,GAAkBI,EAAgB,KAASM,GAAW,IAAM,IAC/FT,EAAiBA,EAAkBA,GAAkBK,EAAgB,KAASI,GAAW,IAAM,MAInGjB,EAAYoB,KAAKE,WAAWlB,EAAUmB,QAAQ,KACN,IAApC,EAAKlB,MAAMO,uBACbX,EAAcmB,KAAKE,WAAWf,EAAegB,QAAQ,KACrDrB,EAAckB,KAAKE,WAAWd,EAAee,QAAQ,MAEvDpB,EAAMiB,KAAKjB,EAAMkB,GAASF,GAQ5B,IALIK,EAAW,GACXC,EAAmB,GACnBC,EAAmB,GAGdC,EAAI,EAAGA,GAAKb,EAAMa,GAAK,EAAKtB,MAAMW,kBACzCQ,EAASJ,KAAKpB,EAAY2B,IACc,IAApC,EAAKtB,MAAMO,uBACba,EAAiBL,KAAKnB,EAAc0B,IACpCD,EAAiBN,KAAKlB,EAAcyB,KAzEd,iBA6EpB,EAAK9B,SAAS,CAClB+B,kBAAkB,GAAD,OAAMJ,GACvBK,oBAAoB,GAAD,OAAMJ,GACzBK,oBAAoB,GAAD,OAAMJ,GACzBK,mBAAmB,YAAK5B,EAAM6B,MAAM,EAAG,EAAK3B,MAAMU,YAAc,IAChEkB,eAAe,IAlFS,4CArB1B,EAAK5B,MAAQ,CACXC,iBAAkB,IAClBY,oBAAqB,IACrBH,YAAa,EACbL,mBAAoB,EACpBE,qBAAsB,EACtBI,kBAAmB,IACnBY,kBAAmB,GACnBC,oBAAqB,GACrBC,oBAAqB,GACrBC,mBAAoB,GACpBE,eAAe,GAbA,E,qDA8GjBC,IAAUC,KACVC,IAAQD,KACRA,IAAWE,WAAW,CAAEC,KAAM,CAAEC,aAAc,IAAKC,aAAc,OAH1D,MAOuCC,KAAKpC,MAF3CK,EALD,EAKCA,mBAAoBE,EALrB,EAKqBA,qBAC1BgB,EANK,EAMLA,kBAAmBC,EANd,EAMcA,oBACnBC,EAPK,EAOLA,oBAAqBC,EAPhB,EAOgBA,mBAEjBW,EAAoB,CACxB,CAAEhD,KAAK,mBAAD,QAAsBgB,EAAqBE,GAAsBW,QAAQ,GAAzE,MAAiFoB,KAAMd,EAAqBe,MAAO,WACzH,CAAElD,KAAK,iBAAD,OAAmBgB,EAAmBa,QAAQ,GAA9C,MAAsDoB,KAAMf,EAAmBgB,MAAO,WAC5F,CAAElD,KAAK,mBAAD,QAAsBgB,EAAqBE,GAAsBW,QAAQ,GAAzE,MAAiFoB,KAAMb,EAAqBc,MAAO,YAGrHC,EAAc,CAClB,CAAEnD,KAAK,iBAAD,OAAmBgB,EAAmBa,QAAQ,GAA9C,MAAsDoB,KAAMf,EAAmBgB,MAAO,WAC5F,CAAElD,KAAM,sBAAuBiD,KAAMZ,EAAoBa,MAAO,YAU5DE,EAAU,CACdC,MAAO,CAAEC,KAAM,iBACfC,QAAS,CAAED,KAAM,sBAAuBE,KAAM,iCAC9CC,QAAS,CACPC,QAAQ,EAAMC,YAAa,IAC3BC,cAAe,EAAGd,aAAc,IAChCe,aAAc,yBAEhBC,MAAO,CACLT,MAAO,CAAEC,KAAM,gBACfS,OAAQ,CAAEC,OAAQ,iBAClBC,aAAc,KAEhBC,MAAO,CAAEH,OAAQ,CAAEI,UAAW,WAAc,MAAO,QAAUpB,KAAK7C,SAElEkE,OApB2B,IAAzBlD,EACS8B,EAEAG,EAkBXX,UAAW,CACT6B,SAAS,IAKb,OACE,yBAAKC,UAAU,6HACb,0BAAMC,SAAUxB,KAAK3C,2BACnB,yBAAKoE,GAAG,kCACN,uBAAGF,UAAU,iBAAgB,gCAAQ,mCAAR,8BAC7B,yBAAKA,UAAU,iBAAiBE,GAAG,0BACjC,yBAAKF,UAAU,cACb,yBAAKE,GAAG,qBAAqBF,UAAU,mDAErC,yBAAKA,UAAU,mBACb,0DACA,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,gHACb,2BAAOG,QAAQ,iBAAiBH,UAAU,kCAA1C,sBACA,2BAAOA,UAAU,8CAA8CI,KAAK,OAAO1E,KAAK,mBAAmB2E,KAAK,KAAKC,UAAU,MAAMC,SAAS,WAAWC,SAAU/B,KAAKnD,kBAChK,yBAAK4E,GAAG,8BAA8BF,UAAU,eAAhD,mEAMN,yBAAKA,UAAU,mBACb,kDACA,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,8GACb,2BAAOG,QAAQ,iBAAf,wBACA,2BAAOH,UAAU,qCAAqCI,KAAK,OAAO1E,KAAK,sBAAsB2E,KAAK,KAAKC,UAAU,MAC/GE,SAAU/B,KAAKnD,kBAEjB,yBAAK4E,GAAG,6BAA6BF,UAAU,eAA/C,0IAOJ,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,gHACb,2BAAOG,QAAQ,iBAAiBH,UAAU,kCAA1C,2BACA,2BAAOA,UAAU,yCAAyCI,KAAK,OAAO1E,KAAK,cAAc2E,KAAK,KAAKC,UAAU,MAAMC,SAAS,WAAWC,SAAU/B,KAAKnD,kBAEtJ,yBAAK4E,GAAG,8BAA8BF,UAAU,eAAhD,uDAKN,yBAAKA,UAAU,mBACb,qDACA,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,wHACb,2BAAOG,QAAQ,qBAAqBH,UAAU,kCAA9C,2BACA,2BAAOA,UAAU,sDAAsDI,KAAK,OAAO1E,KAAK,qBAAqB2E,KAAK,KAAKC,UAAU,MAAMC,SAAS,WAAWC,SAAU/B,KAAKnD,kBAE1K,yBAAK4E,GAAG,kCAAkCF,UAAU,eAApD,0CAIJ,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,0IACb,2BAAOG,QAAQ,+BAAf,gCACA,2BAAOH,UAAU,6CAA6CI,KAAK,OAAO1E,KAAK,uBAAuB2E,KAAK,KAAKC,UAAU,MAAME,SAAU/B,KAAKnD,kBAE/I,yBAAK4E,GAAG,2CAA2CF,UAAU,eAA7D,uGAQN,yBAAKA,UAAU,mBACb,mDACA,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,0HACb,2BAAOG,QAAQ,0BAAf,sBACA,4BAAQH,UAAU,gCAAgCpE,MAAO6C,KAAKpC,MAAMW,kBAAmBwD,SAAU/B,KAAKnD,gBAAiBI,KAAK,qBAC1H,4BAAQE,MAAM,KAAd,YACA,4BAAQA,MAAM,KAAd,gBACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,OAAd,UAEF,yBAAKsE,GAAG,sCAAsCF,UAAU,eAAxD,uDAON,yBAAKE,GAAG,yBAAyBF,UAAU,WACzC,yBAAKA,UAAU,4CAA4CE,GAAG,gBAC5D,yBAAKA,GAAG,wBAAwBF,UAAU,gBAC1C,2BAAOA,UAAU,gBAAgBI,KAAK,SAASxE,MAAM,cACrD,2BAAOwE,KAAK,SAASF,GAAG,aAAaxE,KAAK,KAAKE,MAAM,QAAQoE,UAAU,uDAK5C,IAA7BvB,KAAKpC,MAAM4B,cACP,KACA,6BACA,yBAAKiC,GAAG,oBAAoBF,UAAU,iCAAiCS,SAAS,MAC9E,yBAAKT,UAAU,4BACb,kDACA,wBAAIA,UAAU,8BAAd,MAA8C,0BAAMA,UAAU,UAAUvB,KAAKpC,MAAMU,aAAnF,yBAA4H,0BAAMiD,UAAU,UAAhB,IAA2BvB,KAAKpC,MAAMuB,kBAAkBa,KAAKpC,MAAMU,iBAGnM,yBAAKiD,UAAU,aAAY,kBAAC,IAAD,CAAiBU,WAAYvC,IAAYW,QAASA,WAQ7F,2BAAOsB,KAAK,SAASO,QAASlC,KAAK3C,0BAA2BF,MAAM,mB,GAjR1DgF,cCIEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZN,IAAMxF,EAASyF,SAASC,cAAc,gBACtCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF7F,GDwHI,kBAAmB8F,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6d3afac1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport exporting from \"highcharts/modules/exporting\";\nimport factory from \"highcharts/modules/export-data\";\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initalInvestment: 100000,\n      monthlyContribution: 100,\n      timeInYears: 5,\n      interestPercentage: 2,\n      interestRateVariance: 0,\n      compoundFrequency: 365,\n      futureValueSeries: [],\n      varianceAboveSeries: [],\n      varianceBelowSeries: [],\n      ContributionSeries: [],\n      graphComplete: false\n    };\n  }\n\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({ [nam]: val });\n  }\n\n  calculateCompoundInterest = async () => {\n    let futureValue = [];\n    let varianceAbove = [];\n    let varianceBelow = [];\n\n    let total = [];\n    let principal = this.state.initalInvestment;\n    let principalAbove = this.state.initalInvestment;\n    let principalBelow = this.state.initalInvestment;\n\n    var interest = this.state.interestPercentage / 100;\n    var interestAbove = (this.state.interestPercentage + this.state.interestRateVariance) / 100;\n    var interestBelow = (this.state.interestPercentage - this.state.interestRateVariance) / 100;\n\n    let time = this.state.timeInYears * this.state.compoundFrequency;\n    let monthly = this.state.monthlyContribution;\n    let savings = monthly * 12;\n\n    futureValue.push(principal);\n    varianceAbove.push(principalAbove);\n    varianceBelow.push(principalBelow);\n\n    total.push(principal);\n\n\n    for (let index = 0; index < time; index++) {\n\n      if (this.state.compoundFrequency === 1) {\n        principal = principal + (principal * interest) + (monthly * 12);\n        if (this.state.interestRateVariance !== 0) {\n          principalAbove = principalAbove + (principalAbove * interestAbove) + (monthly * 12);\n          principalBelow = principalBelow + (principalBelow * interestBelow) + (monthly * 12);\n        }\n      }\n      else if (this.state.compoundFrequency === 2) {\n        principal = principal + (principal * (interest / 2)) + (monthly * 6);\n        if (this.state.interestRateVariance !== 0) {\n          principalAbove = principalAbove + (principalAbove * (interestAbove / 2)) + (monthly * 6);\n          principalBelow = principalBelow + (principalBelow * (interestBelow / 2)) + (monthly * 6);\n        }\n      }\n      else if (this.state.compoundFrequency === 12) {\n        principal = principal + (principal * (interest / 12)) + (monthly * 1);\n        if (this.state.interestRateVariance !== 0) {\n          principalAbove = principalAbove + (principalAbove * (interestAbove / 12)) + (monthly * 1);\n          principalBelow = principalBelow + (principalBelow * (interestBelow / 12)) + (monthly * 1);\n        }\n      }\n      else if (this.state.compoundFrequency === 365) {\n        principal = principal + (principal * (interest / 365)) + (monthly / (365 / 12));\n        if (this.state.interestRateVariance !== 0) {\n          principalAbove = principalAbove + (principalAbove * (interestAbove / 365)) + (monthly / (365 / 12));\n          principalBelow = principalBelow + (principalBelow * (interestBelow / 365)) + (monthly / (365 / 12));\n        }\n      }\n\n      futureValue.push(parseFloat(principal.toFixed(2)));\n      if (this.state.interestRateVariance !== 0) {\n        varianceAbove.push(parseFloat(principalAbove.toFixed(2)));\n        varianceBelow.push(parseFloat(principalBelow.toFixed(2)));\n      }\n      total.push(total[index] + savings);\n    }\n\n    let newFinal = [];\n    let newVarianceAbove = [];\n    let newVarianceBelow = [];\n\n\n    for (let i = 0; i <= time; i += this.state.compoundFrequency) {\n      newFinal.push(futureValue[i]);\n      if (this.state.interestRateVariance !== 0) {\n        newVarianceAbove.push(varianceAbove[i]);\n        newVarianceBelow.push(varianceBelow[i]);\n      }\n    }\n\n    await this.setState({\n      futureValueSeries: [...newFinal],\n      varianceAboveSeries: [...newVarianceAbove],\n      varianceBelowSeries: [...newVarianceBelow],\n      ContributionSeries: [...total.slice(0, this.state.timeInYears + 1)],\n      graphComplete: true\n    })\n  }\n\n  render() {\n    exporting(Highcharts);\n    factory(Highcharts);\n    Highcharts.setOptions({ lang: { decimalPoint: '.', thousandsSep: ',' } });\n\n    const { interestPercentage, interestRateVariance,\n      futureValueSeries, varianceAboveSeries,\n      varianceBelowSeries, ContributionSeries } = this.state;\n\n    const diffVarianceChart = [\n      { name: `Variance Above (${(interestPercentage + interestRateVariance).toFixed(2)}%)`, data: varianceAboveSeries, color: '#00325b' },\n      { name: `Future Value (${interestPercentage.toFixed(2)}%)`, data: futureValueSeries, color: '#bf280d' },\n      { name: `Variance Below (${(interestPercentage - interestRateVariance).toFixed(2)}%)`, data: varianceBelowSeries, color: '#269092' }\n    ];\n\n    const normalChart = [\n      { name: `Future Value (${interestPercentage.toFixed(2)}%)`, data: futureValueSeries, color: '#bf280d' },\n      { name: 'Total Contributions', data: ContributionSeries, color: '#269092' }\n    ];\n\n    var mySeries = [];\n\n    if (interestRateVariance !== 0)\n      mySeries = diffVarianceChart\n    else\n      mySeries = normalChart\n\n    const options = {\n      title: { text: 'Total Savings' },\n      credits: { text: 'I Love Making Money', href: 'https://ilovemakingmoney.com/' },\n      tooltip: {\n        shared: true, valuePrefix: '$',\n        valueDecimals: 2, thousandsSep: ',',\n        headerFormat: 'Year {point.key}<br/>',\n      },\n      yAxis: {\n        title: { text: 'US Dollar($)' },\n        labels: { format: '${value:,.0f}' },\n        tickInterval: 1000,\n      },\n      xAxis: { labels: { formatter: function () { return 'Year ' + this.value } } },\n\n      series: mySeries,\n      exporting: {\n        enabled: true,\n\n      }\n    };\n\n    return (\n      <div className=\"block block-sec-calculator block-sec-calculator-blocksec-compound-calculator block-title-sec-compound-interest-calculator\">\n        <form onSubmit={this.calculateCompoundInterest}>\n          <div id=\"compound-interest-calc-wrapper\">\n            <p className=\"form-required\"><strong><span>*</span> DENOTES A REQUIRED FIELD</strong></p>\n            <div className=\"sec-calculator\" id=\"compound-interest-calc\">\n              <div className=\"calculator\">\n                <div id=\"calculator_wrapper\" className=\"calculator_wrapper js-form-wrapper form-wrapper\">\n\n                  <div className=\"calculator_step\">\n                    <h3>Step 1: Initial Investment</h3>\n                    <div className=\"calculator__form-input\">\n                      <div className=\"js-form-item form-item js-form-type-textfield form-type-textfield js-form-item-principal form-item-principal\">\n                        <label htmlFor=\"edit-principal\" className=\"js-form-required form-required\">Initial Investment</label>\n                        <input className=\"monetary-input num-input form-text required\" type=\"text\" name=\"initalInvestment\" size=\"10\" maxLength=\"128\" required=\"required\" onChange={this.myChangeHandler} />\n                        <div id=\"edit-principal--description\" className=\"description\">Amount of money that you have available to invest initially.</div>\n\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"calculator_step\">\n                    <h3>Step 2: Contribute</h3>\n                    <div className=\"calculator__form-input\">\n                      <div className=\"js-form-item form-item js-form-type-textfield form-type-textfield js-form-item-addition form-item-addition\">\n                        <label htmlFor=\"edit-addition\">Monthly Contribution</label>\n                        <input className=\"monetary-input neg-input form-text\" type=\"text\" name=\"monthlyContribution\" size=\"10\" maxLength=\"128\"\n                          onChange={this.myChangeHandler} />\n\n                        <div id=\"edit-addition--description\" className=\"description\">\n                          Amount that you plan to add to the principal every month, or a negative\n                          number for the amount that you plan to withdraw every month.\n                                      </div>\n                      </div>\n                    </div>\n\n                    <div className=\"calculator__form-input\">\n                      <div className=\"js-form-item form-item js-form-type-textfield form-type-textfield js-form-item-num-years form-item-num-years\">\n                        <label htmlFor=\"edit-num-years\" className=\"js-form-required form-required\">Length of Time in Years</label>\n                        <input className=\"num-years num-input form-text required\" type=\"text\" name=\"timeInYears\" size=\"10\" maxLength=\"128\" required=\"required\" onChange={this.myChangeHandler} />\n\n                        <div id=\"edit-num-years--description\" className=\"description\">Length of time, in years, that you plan to save.</div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"calculator_step\">\n                    <h3>Step 3: Interest Rate</h3>\n                    <div className=\"calculator__form-input\">\n                      <div className=\"js-form-item form-item js-form-type-textfield form-type-textfield js-form-item-interest-rate form-item-interest-rate\">\n                        <label htmlFor=\"edit-interest-rate\" className=\"js-form-required form-required\">Estimated Interest Rate</label>\n                        <input className=\"interest-rate ir-input num-input form-text required\" type=\"text\" name=\"interestPercentage\" size=\"10\" maxLength=\"128\" required=\"required\" onChange={this.myChangeHandler} />\n\n                        <div id=\"edit-interest-rate--description\" className=\"description\">Your estimated annual interest rate.</div>\n                      </div>\n                    </div>\n\n                    <div className=\"calculator__form-input\">\n                      <div className=\"js-form-item form-item js-form-type-textfield form-type-textfield js-form-item-interest-rate-variance form-item-interest-rate-variance\">\n                        <label htmlFor=\"edit-interest-rate-variance\">Interest rate variance range</label>\n                        <input className=\"interest-rate ir-input num-input form-text\" type=\"text\" name=\"interestRateVariance\" size=\"10\" maxLength=\"128\" onChange={this.myChangeHandler} />\n\n                        <div id=\"edit-interest-rate-variance--description\" className=\"description\">\n                          Range of interest rates (above and below the rate set above) that you desire\n                          to see results for.\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"calculator_step\">\n                    <h3>Step 4: Compound It</h3>\n                    <div className=\"calculator__form-input\">\n                      <div className=\"js-form-item form-item js-form-type-select form-type-select js-form-item-compound-interest form-item-compound-interest\">\n                        <label htmlFor=\"edit-compound-interest\">Compound Frequency</label>\n                        <select className=\"compound-interest form-select\" value={this.state.compoundFrequency} onChange={this.myChangeHandler} name=\"compoundFrequency\">\n                          <option value=\"1\">Annually</option>\n                          <option value=\"2\">Semiannually</option>\n                          <option value=\"12\">Monthly</option>\n                          <option value=\"365\">Daily</option>\n                        </select>\n                        <div id=\"edit-compound-interest--description\" className=\"description\">\n                          Times per year that interest will be compounded.\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div id=\"compound-calc__buttons\" className=\"buttons\">\n                    <div className=\"form-actions js-form-wrapper form-wrapper\" id=\"edit-actions\">\n                      <div id=\"compound-calc__errors\" className=\"calc-errors\"></div>\n                      <input className=\"submit button\" type=\"submit\" value=\"Calculate\" />\n                      <input type=\"submit\" id=\"edit-reset\" name=\"op\" value=\"Reset\" className=\"button button--reset js-form-submit form-submit\" />\n                    </div>\n                  </div>\n\n                  {\n                    this.state.graphComplete === false\n                      ? null\n                      : <div>\n                        <div id=\"results_container\" className=\"results-container ajax-changed\" tabIndex=\"-1\" >\n                          <div className=\"results-container__inner\">\n                            <h2>The Results Are In</h2>\n                            <h3 className=\"calculator__results-amount\">In <span className=\"amount\">{this.state.timeInYears}</span> years, you will have <span className=\"amount\">${this.state.futureValueSeries[this.state.timeInYears]}</span></h3>\n                          </div>\n                        </div>\n                        <div className=\"highChart\"><HighchartsReact highcharts={Highcharts} options={options} /></div>\n                      </div>\n                  }\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n        <input type=\"submit\" onClick={this.calculateCompoundInterest} value=\"Calculate\" />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst target = document.querySelector(\"#my-box-page\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  target\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}